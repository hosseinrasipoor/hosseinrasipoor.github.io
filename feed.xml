<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://hosseinrasipoor.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://hosseinrasipoor.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-05T10:37:41+00:00</updated><id>https://hosseinrasipoor.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">this is the third post</title><link href="https://hosseinrasipoor.github.io/blog/2024/photo-gallery/" rel="alternate" type="text/html" title="this is the third post"/><published>2024-12-04T01:59:00+00:00</published><updated>2024-12-04T01:59:00+00:00</updated><id>https://hosseinrasipoor.github.io/blog/2024/photo-gallery</id><content type="html" xml:base="https://hosseinrasipoor.github.io/blog/2024/photo-gallery/"><![CDATA[<p>This is post 3 with image and code and equation</p> <p>this image is logo of our univercity</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/logo-480.webp 480w,/assets/img/logo-800.webp 800w,/assets/img/logo-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/logo.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> in this photo we can see iust logo here </div> <p>this is a math</p> \[\prod \bigcap \binom{n}{r}\nless \int x^{3}+4x^{4} dx\] <p>this is a code</p> <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"This is code for post 3"</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
      <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"hi "</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts"/><category term="math"/><category term="images"/><summary type="html"><![CDATA[third post]]></summary></entry><entry><title type="html">Sec post</title><link href="https://hosseinrasipoor.github.io/blog/2015/math/" rel="alternate" type="text/html" title="Sec post"/><published>2015-10-20T15:12:00+00:00</published><updated>2015-10-20T15:12:00+00:00</updated><id>https://hosseinrasipoor.github.io/blog/2015/math</id><content type="html" xml:base="https://hosseinrasipoor.github.io/blog/2015/math/"><![CDATA[<p>This is post 2 with code and equation</p> <p>this is a math</p> \[\int \begin{bmatrix} e &amp; f \\ g&amp; h \\ \end{bmatrix}dz =\Delta \AE k\sum x y z + 10\] <p>this is a code</p> <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
</pre></td><td class="code"><pre><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span>

<span class="k">enum</span> <span class="n">light</span> <span class="p">{</span><span class="n">RED</span><span class="p">,</span><span class="n">GREEN</span><span class="p">,</span><span class="n">YELLOW</span><span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">sec</span><span class="p">,</span><span class="n">red</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="n">green</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">sec</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">green</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">red</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="k">enum</span> <span class="n">light</span> <span class="n">line1</span><span class="o">=</span><span class="n">RED</span><span class="p">,</span><span class="n">line2</span><span class="o">=</span><span class="n">RED</span><span class="p">,</span><span class="n">line3</span><span class="o">=</span><span class="n">RED</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">counter1</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">counter2</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">counter3</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">sec</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"Second %d: "</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
        <span class="c1">///////////////////////////////</span>
        <span class="k">if</span><span class="p">(</span><span class="n">line1</span><span class="o">==</span><span class="n">RED</span><span class="p">)</span>
        <span class="p">{</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">counter1</span><span class="o">==</span><span class="n">red</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">line1</span><span class="o">=</span><span class="n">GREEN</span><span class="p">;</span>
                <span class="n">counter1</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">"Lane 1: Red | "</span><span class="p">);</span>
                <span class="n">counter1</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>    
        <span class="k">if</span><span class="p">(</span><span class="n">line1</span><span class="o">==</span><span class="n">GREEN</span><span class="p">)</span>
        <span class="p">{</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">counter1</span><span class="o">==</span><span class="n">green</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">line1</span><span class="o">=</span><span class="n">YELLOW</span><span class="p">;</span>
                <span class="n">counter1</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">"Lane 1: Green | "</span><span class="p">);</span>
                <span class="n">counter1</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>    
        <span class="k">if</span><span class="p">(</span><span class="n">line1</span><span class="o">==</span><span class="n">YELLOW</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"Lane 1: Yellow | "</span><span class="p">);</span>
            <span class="n">line1</span><span class="o">=</span><span class="n">RED</span><span class="p">;</span>
            <span class="n">counter1</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="c1">/////////   </span>






        <span class="k">if</span><span class="p">(</span><span class="n">line2</span><span class="o">==</span><span class="n">RED</span><span class="p">)</span>
        <span class="p">{</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">counter2</span><span class="o">==</span><span class="n">red</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">line2</span><span class="o">=</span><span class="n">GREEN</span><span class="p">;</span>
                <span class="n">counter2</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">"Lane 2: Red | "</span><span class="p">);</span>
                <span class="n">counter2</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>    
        <span class="k">if</span><span class="p">(</span><span class="n">line2</span><span class="o">==</span><span class="n">GREEN</span><span class="p">)</span>
        <span class="p">{</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">counter2</span><span class="o">==</span><span class="n">green</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">line2</span><span class="o">=</span><span class="n">YELLOW</span><span class="p">;</span>
                <span class="n">counter2</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">"Lane 2: Green | "</span><span class="p">);</span>
                <span class="n">counter2</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>    
        <span class="k">if</span><span class="p">(</span><span class="n">line2</span><span class="o">==</span><span class="n">YELLOW</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"Lane 2: Yellow | "</span><span class="p">);</span>
            <span class="n">line2</span><span class="o">=</span><span class="n">RED</span><span class="p">;</span>
            <span class="n">counter2</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="c1">/////////////////////////////////////////</span>





        <span class="k">if</span><span class="p">(</span><span class="n">line3</span><span class="o">==</span><span class="n">RED</span><span class="p">)</span>
        <span class="p">{</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">counter3</span><span class="o">==</span><span class="n">red</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">line3</span><span class="o">=</span><span class="n">GREEN</span><span class="p">;</span>
                <span class="n">counter3</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">"Lane 3: Red</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
                <span class="n">counter3</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>    
        <span class="k">if</span><span class="p">(</span><span class="n">line3</span><span class="o">==</span><span class="n">GREEN</span><span class="p">)</span>
        <span class="p">{</span>
            
            <span class="k">if</span><span class="p">(</span><span class="n">counter3</span><span class="o">==</span><span class="n">green</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">line3</span><span class="o">=</span><span class="n">YELLOW</span><span class="p">;</span>
                <span class="n">counter3</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">"Lane 3: Green</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
                <span class="n">counter3</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>    
        <span class="k">if</span><span class="p">(</span><span class="n">line3</span><span class="o">==</span><span class="n">YELLOW</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"Lane 3: Yellow</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
            <span class="n">line3</span><span class="o">=</span><span class="n">RED</span><span class="p">;</span>
            <span class="n">counter3</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
    
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="math"/><summary type="html"><![CDATA[this is the second post]]></summary></entry><entry><title type="html">First post</title><link href="https://hosseinrasipoor.github.io/blog/2015/code/" rel="alternate" type="text/html" title="First post"/><published>2015-07-15T00:00:00+00:00</published><updated>2015-07-15T00:00:00+00:00</updated><id>https://hosseinrasipoor.github.io/blog/2015/code</id><content type="html" xml:base="https://hosseinrasipoor.github.io/blog/2015/code/"><![CDATA[<p>This is post 1 with image and code and equation</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/iust-480.webp 480w,/assets/img/iust-800.webp 800w,/assets/img/iust-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/iust.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> in this photo we can see iust map </div> <p>this is a math</p> \[\sum \alpha \times \beta ^{\ddot{}} &lt; \begin{bmatrix} \alpha &amp; \beta \\ \varepsilon &amp; \xi \\ \end{bmatrix}\] <p>this is a code</p> <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"This is code for post 1"</span><span class="p">;</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts"/><category term="math"/><category term="images"/><summary type="html"><![CDATA[i am making the first post]]></summary></entry></feed>